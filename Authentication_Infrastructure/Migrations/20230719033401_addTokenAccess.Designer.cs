// <auto-generated />
using System;
using Authentication_Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Authentication_Infrastructure.Migrations
{
    [DbContext(typeof(AuthenticationDbContext))]
    [Migration("20230719033401_addTokenAccess")]
    partial class addTokenAccess
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication_Domain.Entites.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NomalizeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "262219bd-1183-430e-95fe-59feb43f510c",
                            Description = "",
                            Name = "ADMIN",
                            NomalizeName = "Admin"
                        },
                        new
                        {
                            Id = "f79a3acd-517e-4a18-9452-59995527225d",
                            Description = "",
                            Name = "USER",
                            NomalizeName = "User"
                        });
                });

            modelBuilder.Entity("Authentication_Domain.Entites.User", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstEmail")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PresentEmail")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TokenAccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            id = "6adf989c-1f4a-4398-8294-19fc76cb6e2a",
                            Birthday = new DateTime(2023, 7, 19, 10, 34, 1, 173, DateTimeKind.Local).AddTicks(3334),
                            CreatedDate = new DateTime(2023, 7, 19, 10, 34, 1, 173, DateTimeKind.Local).AddTicks(3349),
                            FirstEmail = "test001@gmail.com",
                            FirstName = "test",
                            IsLock = false,
                            LastName = "account",
                            PasswordHash = "nSUQ/133didCpNJLsvcLvQ==",
                            PresentEmail = "test001@gmail.com",
                            RoleId = "f79a3acd-517e-4a18-9452-59995527225d",
                            TokenAccess = "",
                            UserName = "testVersion_0001"
                        },
                        new
                        {
                            id = "c01b13d6-84c9-44b9-ad22-9fd24dafe4dd",
                            Birthday = new DateTime(2023, 7, 19, 10, 34, 1, 173, DateTimeKind.Local).AddTicks(3447),
                            CreatedDate = new DateTime(2023, 7, 19, 10, 34, 1, 173, DateTimeKind.Local).AddTicks(3448),
                            FirstEmail = "admin001@gmail.com",
                            FirstName = "Admin",
                            IsLock = false,
                            LastName = "account",
                            PasswordHash = "VWBU8/+H4em26o8A92n+Tg==",
                            PresentEmail = "admin001@gmail.com",
                            RoleId = "262219bd-1183-430e-95fe-59feb43f510c",
                            TokenAccess = "",
                            UserName = "adminVersion_0001"
                        });
                });

            modelBuilder.Entity("Authentication_Domain.Entites.User", b =>
                {
                    b.HasOne("Authentication_Domain.Entites.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Authentication_Domain.Entites.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
