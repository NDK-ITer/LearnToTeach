@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <video id="videoElement" autoplay></video>
    <h1>Kết nối WebSocket từ Razor Page lên Server</h1>

    <input type="text" id="messageInput" />
    <button onclick="sendMessage()">Gửi tin nhắn</button>

    
</div>

<script>
    // Lấy phần tử video
    const videoElement = document.getElementById('videoElement');

    // Kiểm tra xem trình duyệt có hỗ trợ getUserMedia hay không
    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
        // Truy cập vào camera
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(function (stream) {
                // Hiển thị hình ảnh từ camera trong phần tử video
                videoElement.srcObject = stream;
            })
            .catch(function (error) {
                console.error('Lỗi truy cập vào camera: ', error);
            });
    } else {
        console.error('Trình duyệt không hỗ trợ getUserMedia.');
    }
</script>
<script>
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub") // Đường dẫn đến Hub trên server
        .build();

    connection.start().then(function () {
        console.log("Đã kết nối tới server SignalR");
    }).catch(function (err) {
        console.error(err.toString());
    });

    connection.on("ReceiveMessage", function (message) {
        console.log("Nhận tin nhắn từ server: " + message);
    });

    function sendMessage() {
        var message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", message).catch(function (err) {
            console.error(err.toString());
        });
    }
</script>
