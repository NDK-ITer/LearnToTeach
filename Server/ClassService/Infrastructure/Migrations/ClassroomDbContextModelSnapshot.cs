// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ClassroomDbContext))]
    partial class ClassroomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Classroom", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 8, 10, 8, 47, 15, 85, DateTimeKind.Local).AddTicks(5658));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdUserHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrivate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("KeyHash")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classrooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8ab8190e-a568-4359-8668-7466f5f820ee",
                            CreateDate = new DateTime(2023, 8, 10, 8, 47, 15, 86, DateTimeKind.Local).AddTicks(1578),
                            IdUserHost = "9d853125-0a15-40ee-bbc1-ee25fbdbacc1",
                            IsPrivate = true,
                            KeyHash = "cA4FigUKj7deRjen/4NWmw==",
                            Name = "Class_1"
                        },
                        new
                        {
                            Id = "b1323ea9-64f7-4a39-8a61-399c6a48bc86",
                            CreateDate = new DateTime(2023, 8, 10, 8, 47, 15, 86, DateTimeKind.Local).AddTicks(1734),
                            IdUserHost = "9d853125-0a15-40ee-bbc1-ee25fbdbacc1",
                            IsPrivate = false,
                            Name = "Class_2"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ClassroomDetail", b =>
                {
                    b.Property<string>("IdUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IdClass")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdUser", "IdClass");

                    b.HasIndex("IdClass");

                    b.ToTable("ClassroomDetails", (string)null);

                    b.HasData(
                        new
                        {
                            IdUser = "c40aa1e2-8625-4974-a0b3-ae9e75485ea3",
                            IdClass = "8ab8190e-a568-4359-8668-7466f5f820ee",
                            Description = "",
                            Role = ""
                        },
                        new
                        {
                            IdUser = "c40aa1e2-8625-4974-a0b3-ae9e75485ea3",
                            IdClass = "b1323ea9-64f7-4a39-8a61-399c6a48bc86",
                            Description = "",
                            Role = ""
                        });
                });

            modelBuilder.Entity("Domain.Entities.ClassroomDetail", b =>
                {
                    b.HasOne("Domain.Entities.Classroom", "classroom")
                        .WithMany("ListUserId")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classroom");
                });

            modelBuilder.Entity("Domain.Entities.Classroom", b =>
                {
                    b.Navigation("ListUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
