// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ClassroomDbContext))]
    partial class ClassroomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Classroom", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AvatarUserHost")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 6, 9, 25, 29, 912, DateTimeKind.Local).AddTicks(4929));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdUserHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("KeyHash")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUserHost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Classrooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d0186509-69d2-4a76-a0d1-69c5916c0b02",
                            CreateDate = new DateTime(2023, 11, 6, 9, 25, 29, 913, DateTimeKind.Local).AddTicks(3247),
                            IdUserHost = "193ba283-bf34-40ad-a3be-10b1780cba0e",
                            IsPrivate = true,
                            KeyHash = "cA4FigUKj7deRjen/4NWmw==",
                            Name = "Class_1"
                        },
                        new
                        {
                            Id = "02c47002-cc29-4b66-82bd-a86b7e3c6d5e",
                            CreateDate = new DateTime(2023, 11, 6, 9, 25, 29, 913, DateTimeKind.Local).AddTicks(3514),
                            IdUserHost = "2c75293b-f8e5-4862-9b13-5894a64895cd",
                            IsPrivate = false,
                            Name = "Class_2"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MemberClassroom", b =>
                {
                    b.Property<string>("IdUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IdClass")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdUser", "IdClass");

                    b.HasIndex("IdClass");

                    b.ToTable("MemberClassroom", (string)null);

                    b.HasData(
                        new
                        {
                            IdUser = "2c75293b-f8e5-4862-9b13-5894a64895cd",
                            IdClass = "d0186509-69d2-4a76-a0d1-69c5916c0b02",
                            Avatar = "",
                            Description = "",
                            Name = "Admin account",
                            Role = ""
                        },
                        new
                        {
                            IdUser = "193ba283-bf34-40ad-a3be-10b1780cba0e",
                            IdClass = "02c47002-cc29-4b66-82bd-a86b7e3c6d5e",
                            Avatar = "",
                            Description = "",
                            Name = "test account",
                            Role = ""
                        });
                });

            modelBuilder.Entity("Domain.Entities.MemberClassroom", b =>
                {
                    b.HasOne("Domain.Entities.Classroom", "classroom")
                        .WithMany("ListUserId")
                        .HasForeignKey("IdClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classroom");
                });

            modelBuilder.Entity("Domain.Entities.Classroom", b =>
                {
                    b.Navigation("ListUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
